<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="back_button.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>